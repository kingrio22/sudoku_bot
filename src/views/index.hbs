<!DOCTYPE html>
<html>
  <head>
    <style>
      .cell {
  border: solid 1px black;
  height: 50px;
  width: 50px;
  align-items: center;
  font-size: 25px;
}
.mistake{
  background-color: red !important; 
}
colgroup,
tbody {
  border: solid medium;
}
.given {
  color: red;
  font-weight: bold;
}
.hidden{
  display: none; 
}
input{
  text-align: center;
  height: 100%; 
  width: 100%; 
  margin: 0; 
  padding: 0; 
}

input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  -webkit-appearance: none; 
  margin: 0; 
  padding: 0; 
}
.disabledInput{
  background-color: rgba(128, 128, 128, 0.226) !important;
}

.button{
  margin-top: 50px; 
  border-radius: 5px; 
  border-style: solid;
  border-width: 1px;
  border-color: transparent; 
  width: 150px; 
  height: 50x; 
}
#showError{
  display: none; 
}

.solve{
  background-color: green; 
  color: white; 
}

.edit{
  background-color: orange; 
  color: white; 
}
.leave{
  background-color:green; 
  color: white; 
}

.even {
  background-color: rgba(118, 230, 127, 0.5);
}
.even input {
  background-color: rgba(118, 230, 127, 0.2);;
}
.sudoku{
  margin-top: 100px; 
}


input {
  border: none;
}
    </style>
    <link rel="stylesheet" href="sudoku.css" type="text/css" />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous"
    />
  </head>
  <body>
    <div class="container">
      <div class="row justify-content-center sudoku">
        <div class="col-auto">
          <table id="sudoku">
            <colgroup><col><col><col>
            <colgroup><col><col><col>
            <colgroup><col><col><col>
            <tbody>
              <tr>
                <td class="cell  given text-center">1</td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input  text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input  text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input  text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input  text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell  given text-center">3</td>
              </tr>
              <tr>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input  text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even    given text-center">6</td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
              </tr>
              <tr>

                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell  given text-center">3</td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell  given text-center">1</td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
              </tr>
            </tbody>
              <tbody>
              <tr>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell  given text-center">7</td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell  given text-center">1</td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
              </tr>
              <tr>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even   given   text-center">8</td>
                <td class="cell even  input text-center  "><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input text-center  "><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell  given text-center">5</td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
              </tr>
              <tr>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell  given text-center">3</td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even     given text-center">4</td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
              </tr>
            </tbody>
            <tbody>
              <tr>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even     given text-center">8</td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even     given text-center">6</td>
                <td class="cell input  text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
              </tr>
              <tr>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell  given text-center">1</td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
              </tr>
              <tr>
                <td class="cell even     given text-center">6</td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell even  input   text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td  class="cell input text-center"><input type="text" max="9" min="1" maxlength="1" minlength="1" ></td>
                <td class="cell  given text-center">7</td>
              </tr>
            </tbody>
          </table>
         
          <div class="row">
            <div class="col-auto text-center">
              <button id="editbutton" class="button edit">Bearbeiten</button>
            </div>
            <div class="col-auto text-center">
              <button id="solvebutton" class="button solve">Lösen</button>
            </div>
          </div>
            <div class="row justify-content-center">
            <div class="col-auto text-center">
              <button id="leavebutton" class="button leave" style="display: none;">Bearbeiten beenden</button>
            </div>
          </div>
          <div class="row ">
            <div class="col text-center" style="margin-top: 10px; color:red; font-size: large;">
              <p id="showError"></p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>
  <script>
    let edit = undefined; 
    document.querySelector('#editbutton').addEventListener('click', editMode);
    document.querySelector('#leavebutton').addEventListener('click', leaveEdit);


    function editMode(){
      edit = true; 
     let buttons = document.getElementsByTagName('button'); 
     for(const button of buttons){
       if(button.style.display === 'none'){
         button.style.display = 'block'; 
       }else{
         button.style.display = 'none'
       }
     }



      let cells = document.getElementsByClassName('cell'); 

      for(const cell of cells){
        cell.classList.remove('given', 'even', 'input')
        console.log(cell)
        cell.firstChild.remove(); 
        let inputElem = document.createElement('input'); 
        cell.appendChild(inputElem); 

        cell.firstChild.onInput = (eve) => {
          if(eve.isTrusted){

          }
        }
      }
  }

  function leaveEdit(){
    let buttons = document.getElementsByTagName('button'); 
     for(const button of buttons){
       if(button.style.display === 'none'){
         button.style.display = 'block'; 
       }else{
         button.style.display = 'none'
       }
     }
    edit = false; 
  }



if(edit === false){

    let values = document.getElementsByTagName('input');
    for(let i = 0; i<values.length; i++){
      values[i].oninput = (value)=>{
        if(value.isTrusted){

        if(values[i].value == ""){
          values[i].classList.remove('mistake'); 
        }else{
        if((values[i].parentElement.classList[1]==="even" && (values[i].value %2 !=0)) || values[i].value>9 ){
          
          values[i].classList.add('mistake'); 
        }else{
          values[i].classList.remove('mistake'); 
        }
      }
      }
    }
  }


       
      
  let cells = document.getElementsByClassName('cell'); 

          for(let i = 0; i<cells.length; i++){
            cells[i].onchange = (eve)=>{
              let response = fillNewMatrix(); 
              let position = undefined; 
              if(eve.isTrusted){
                let duplicateInput = false
                let neededCol = extractColFromMatrix(response.matrix, response.changedCell.col)
                if(hasDuplicates(response.matrix[response.changedCell.row])){
                  position = 'row'; 
                  duplicateInput = true; 
                }else if(hasDuplicates(neededCol)){
                  duplicateInput = true; 
                  position = 'col'; 
                }else if(checkNumbersInMiniSquare(response.matrix[response.changedCell.row][response.changedCell.col],response.changedCell.row, response.changedCell.col, response.matrix)){
                  duplicateInput = true; 
                  position = 'square'; 
                }
              
                let errorElem = document.getElementById('showError'); 
               if(duplicateInput){
                 errorElem.textContent = `Last input results in ${position} error`
                 errorElem.style.display = 'block'; 
                
                 for(const value of values){
                   value.disabled = true; 
                   value.classList.add('disabledInput'); 
                   value.parentElement.classList.add('disabledInput')
                 }
                 cells[i].classList.remove('disabledInput')
                 cells[i].firstChild.classList.remove('disabledInput')
                 cells[i].firstChild.disabled = false
               }else{
                errorElem.style.display = 'none'; 
                for(const value of values){
                   value.disabled = false; 
                   value.classList.remove('disabledInput'); 
                   value.parentElement.classList.remove('disabledInput')
                 }
               }
              }
            }
          }
    
      function hasDuplicates(array) {
      for(let i = 0; i<array.length; i++){
        for(let j = 0; j<array.length; j++){
          if(array[i] != "" && array[j] != "" && i!=j){
            if(array[i] === array[j]){
              return true; 
            }
          }
        }
      }
      return false; 
    }
    function extractColFromMatrix(matrix, col){
      let extractedCol = []
      for(let i = 0; i<9; i++){
        extractedCol.push(matrix[i][col]); 
      }
      console.log(extractedCol); 
      return extractedCol; 
    }

    function checkNumbersInMiniSquare(numberToCheck, x, y, matrix) {
      for (let i = x - (x % 3); i < x - (x % 3) + 3; i++) {
        for (let j = y - (y % 3); j < y - (y % 3) + 3; j++) {
          if(i===x && y===j){
            continue
          }
          if (matrix[i][j] != "") {
            if (matrix[i][j] === numberToCheck) {
              return true;
            }
          }
        }
      }
      return false;
    }

    function fillNewMatrix(){
      let counter =0; 
      let matrix = []; 
      let changedCell = {
        row: undefined, 
        col: undefined
      }
      let cells = document.getElementsByClassName('cell'); 
        for(let i = 0; i<9; i++){
          matrix[i] = []
            for(let j= 0; j<9; j++){
              let value; 
              if(cells[i*9+j].firstElementChild){
                counter++; 
                value = parseInt(cells[i*9+j].firstChild.value); 
                if(!isNaN(value)){
                  console.log("in if", value); 
                  changedCell.row = i;
                  changedCell.col = j;  
                }
              }else{
                value = cells[i*9+j].textContent
              }
              if(isNaN(parseInt(value))){
                matrix[i].push('')
                continue;
              }
              
              matrix[i].push(parseInt(value))
            }
          }
          console.log(counter); 
          let response = {
            matrix: matrix, 
            changedCell: changedCell
          }
          return response; 
    }
  }
  </script>
</html>
